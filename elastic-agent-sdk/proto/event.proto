// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

syntax = "proto3";

package proto;

option cc_enable_arenas = true;
option go_package = "pkg/proto;proto";

// An event sent over the wire.
message Event {
  // Unique ID of the event.
  uint64 id = 1;
  // JSON encoded event data.
  bytes data = 3;
}

// A send events message.
message SendEvents {
  // Events that are being sent.
  repeated Event events = 1;
}

// A send events message.
message SendEventsResult {
  // ID of events that where sent.
  repeated uint64 sent = 1;
}

service Events {
  // Called by the sender to send the event to the next connector in the chain.
  //
  // Events are sent in batches from the sender to the receiver. The sender should verify that
  // if events are marked unsent that they try to send them again.
  rpc Send(SendEvents) returns (SendEventsResult);
}
